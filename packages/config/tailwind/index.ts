import type { Config } from "tailwindcss";
import { fontFamily } from "tailwindcss/defaultTheme";

export default {
  darkMode: ["class"],
  content: ["src/**/*.{ts,tsx}", "components/**/*.{ts,tsx}"],
  theme: {
    colors: {
      transparent: "transparent",
      current: "currentColor",
      "gray-1": `hsl(var(--gray-1) / <alpha-value>)`,
      "gray-2": `hsl(var(--gray-2) / <alpha-value>)`,
      "gray-3": `hsl(var(--gray-3) / <alpha-value>)`,
      "gray-4": `hsl(var(--gray-4) / <alpha-value>)`,
      "gray-5": `hsl(var(--gray-5) / <alpha-value>)`,
      "gray-6": `hsl(var(--gray-6) / <alpha-value>)`,
      "gray-7": `hsl(var(--gray-7) / <alpha-value>)`,
      "gray-8": `hsl(var(--gray-8) / <alpha-value>)`,
      "gray-9": `hsl(var(--gray-9) / <alpha-value>)`,
      "gray-10": `hsl(var(--gray-10) / <alpha-value>)`,
      "gray-11": `hsl(var(--gray-11) / <alpha-value>)`,
      "gray-12": `hsl(var(--gray-12) / <alpha-value>)`,
      "grayA-1": `hsl(var(--grayA1))`,
      "grayA-2": `hsl(var(--grayA2))`,
      "grayA-3": `hsl(var(--grayA3))`,
      "grayA-4": `hsl(var(--grayA4))`,
      "grayA-5": `hsl(var(--grayA5))`,
      "grayA-6": `hsl(var(--grayA6))`,
      "grayA-7": `hsl(var(--grayA7))`,
      "grayA-8": `hsl(var(--grayA8))`,
      "grayA-9": `hsl(var(--grayA9))`,
      "grayA-10": `hsl(var(--grayA10))`,
      "grayA-11": `hsl(var(--grayA11))`,
      "grayA-12": `hsl(var(--grayA12))`,
      "blue-1": `hsl(var(--blue1) / <alpha-value>)`,
      "blue-2": `hsl(var(--blue2) / <alpha-value>)`,
      "blue-3": `hsl(var(--blue3) / <alpha-value>)`,
      "blue-4": `hsl(var(--blue4) / <alpha-value>)`,
      "blue-5": `hsl(var(--blue5) / <alpha-value>)`,
      "blue-6": `hsl(var(--blue6) / <alpha-value>)`,
      "blue-7": `hsl(var(--blue7) / <alpha-value>)`,
      "blue-8": `hsl(var(--blue8) / <alpha-value>)`,
      "blue-9": `hsl(var(--blue9) / <alpha-value>)`,
      "blue-10": `hsl(var(--blue10) / <alpha-value>)`,
      "blue-11": `hsl(var(--blue11) / <alpha-value>)`,
      "blue-12": `hsl(var(--blue12) / <alpha-value>)`,
      "blueA-1": `hsl(var(--blueA1))`,
      "blueA-2": `hsl(var(--blueA2))`,
      "blueA-3": `hsl(var(--blueA3))`,
      "blueA-4": `hsl(var(--blueA4))`,
      "blueA-5": `hsl(var(--blueA5))`,
      "blueA-6": `hsl(var(--blueA6))`,
      "blueA-7": `hsl(var(--blueA7))`,
      "blueA-8": `hsl(var(--blueA8))`,
      "blueA-9": `hsl(var(--blueA9))`,
      "blueA-10": `hsl(var(--blueA10))`,
      "blueA-11": `hsl(var(--blueA11))`,
      "blueA-12": `hsl(var(--blueA12))`,
      "plum-1": `hsl(var(--plum1) / <alpha-value>)`,
      "plum-2": `hsl(var(--plum2) / <alpha-value>)`,
      "plum-3": `hsl(var(--plum3) / <alpha-value>)`,
      "plum-4": `hsl(var(--plum4) / <alpha-value>)`,
      "plum-5": `hsl(var(--plum5) / <alpha-value>)`,
      "plum-6": `hsl(var(--plum6) / <alpha-value>)`,
      "plum-7": `hsl(var(--plum7) / <alpha-value>)`,
      "plum-8": `hsl(var(--plum8) / <alpha-value>)`,
      "plum-9": `hsl(var(--plum9) / <alpha-value>)`,
      "plum-10": `hsl(var(--plum10) / <alpha-value>)`,
      "plum-11": `hsl(var(--plum11) / <alpha-value>)`,
      "plum-12": `hsl(var(--plum12) / <alpha-value>)`,
      "plumA-1": `hsl(var(--plumA1))`,
      "plumA-2": `hsl(var(--plumA2))`,
      "plumA-3": `hsl(var(--plumA3))`,
      "plumA-4": `hsl(var(--plumA4))`,
      "plumA-5": `hsl(var(--plumA5))`,
      "plumA-6": `hsl(var(--plumA6))`,
      "plumA-7": `hsl(var(--plumA7))`,
      "plumA-8": `hsl(var(--plumA8))`,
      "plumA-9": `hsl(var(--plumA9))`,
      "plumA-10": `hsl(var(--plumA10))`,
      "plumA-11": `hsl(var(--plumA11))`,
      "plumA-12": `hsl(var(--plumA12))`,
      "red-1": `hsl(var(--red-1) / <alpha-value>)`,
      "red-2": `hsl(var(--red-2) / <alpha-value>)`,
      "red-3": `hsl(var(--red-3) / <alpha-value>)`,
      "red-4": `hsl(var(--red-4) / <alpha-value>)`,
      "red-5": `hsl(var(--red-5) / <alpha-value>)`,
      "red-6": `hsl(var(--red-6) / <alpha-value>)`,
      "red-7": `hsl(var(--red-7) / <alpha-value>)`,
      "red-8": `hsl(var(--red-8) / <alpha-value>)`,
      "red-9": `hsl(var(--red-9) / <alpha-value>)`,
      "red-10": `hsl(var(--red-10) / <alpha-value>)`,
      "red-11": `hsl(var(--red-11) / <alpha-value>)`,
      "red-12": `hsl(var(--red-12) / <alpha-value>)`,
      "redA-1": `hsl(var(--redA1))`,
      "redA-2": `hsl(var(--redA2))`,
      "redA-3": `hsl(var(--redA3))`,
      "redA-4": `hsl(var(--redA4))`,
      "redA-5": `hsl(var(--redA5))`,
      "redA-6": `hsl(var(--redA6))`,
      "redA-7": `hsl(var(--redA7))`,
      "redA-8": `hsl(var(--redA8))`,
      "redA-9": `hsl(var(--redA9))`,
      "redA-10": `hsl(var(--redA10))`,
      "redA-11": `hsl(var(--redA11))`,
      "redA-12": `hsl(var(--redA12))`,
      "grass-1": `hsl(var(--grass-1) / <alpha-value>)`,
      "grass-2": `hsl(var(--grass-2) / <alpha-value>)`,
      "grass-3": `hsl(var(--grass-3) / <alpha-value>)`,
      "grass-4": `hsl(var(--grass-4) / <alpha-value>)`,
      "grass-5": `hsl(var(--grass-5) / <alpha-value>)`,
      "grass-6": `hsl(var(--grass-6) / <alpha-value>)`,
      "grass-7": `hsl(var(--grass-7) / <alpha-value>)`,
      "grass-8": `hsl(var(--grass-8) / <alpha-value>)`,
      "grass-9": `hsl(var(--grass-9) / <alpha-value>)`,
      "grass-10": `hsl(var(--grass-10) / <alpha-value>)`,
      "grass-11": `hsl(var(--grass-11) / <alpha-value>)`,
      "grass-12": `hsl(var(--grass-12) / <alpha-value>)`,
      "grassA-1": `hsl(var(--grassA1))`,
      "grassA-2": `hsl(var(--grassA2))`,
      "grassA-3": `hsl(var(--grassA3))`,
      "grassA-4": `hsl(var(--grassA4))`,
      "grassA-5": `hsl(var(--grassA5))`,
      "grassA-6": `hsl(var(--grassA6))`,
      "grassA-7": `hsl(var(--grassA7))`,
      "grassA-8": `hsl(var(--grassA8))`,
      "grassA-9": `hsl(var(--grassA9))`,
      "grassA-10": `hsl(var(--grassA10))`,
      "grassA-11": `hsl(var(--grassA11))`,
      "grassA-12": `hsl(var(--grassA12))`,
      "amber-1": `hsl(var(--amber-1) / <alpha-value>)`,
      "amber-2": `hsl(var(--amber-2) / <alpha-value>)`,
      "amber-3": `hsl(var(--amber-3) / <alpha-value>)`,
      "amber-4": `hsl(var(--amber-4) / <alpha-value>)`,
      "amber-5": `hsl(var(--amber-5) / <alpha-value>)`,
      "amber-6": `hsl(var(--amber-6) / <alpha-value>)`,
      "amber-7": `hsl(var(--amber-7) / <alpha-value>)`,
      "amber-8": `hsl(var(--amber-8) / <alpha-value>)`,
      "amber-9": `hsl(var(--amber-9) / <alpha-value>)`,
      "amber-10": `hsl(var(--amber-10) / <alpha-value>)`,
      "amber-11": `hsl(var(--amber-11) / <alpha-value>)`,
      "amber-12": `hsl(var(--amber-12) / <alpha-value>)`,
      "amberA-1": `hsl(var(--amberA1))`,
      "amberA-2": `hsl(var(--amberA2))`,
      "amberA-3": `hsl(var(--amberA3))`,
      "amberA-4": `hsl(var(--amberA4))`,
      "amberA-5": `hsl(var(--amberA5))`,
      "amberA-6": `hsl(var(--amberA6))`,
      "amberA-7": `hsl(var(--amberA7))`,
      "amberA-8": `hsl(var(--amberA8))`,
      "amberA-9": `hsl(var(--amberA9))`,
      "amberA-10": `hsl(var(--amberA10))`,
      "amberA-11": `hsl(var(--amberA11))`,
      "amberA-12": `hsl(var(--amberA12))`,
    },
    transitionTimingFunction: {
      /**
       * See: https://carbondesignsystem.com/guidelines/motion/overview/
       */
      DEFAULT: "cubic-bezier(0.2, 0, 0.38, 0.9)",
      "productive-standard": "cubic-bezier(0.2, 0, 0.38, 0.9)",
      "productive-entrance": "cubic-bezier(0, 0, 0.38, 0.9)",
      "productive-exit": "cubic-bezier(0.2, 0, 1, 0.9)",
      "expressive-standard": "cubic-bezier(0.4, 0.14, 0.3, 1)",
      "expressive-entrance": "cubic-bezier(0, 0, 0.3, 1)",
      "expressive-exit": "cubic-bezier(0.4, 0.14, 1, 1)",
    },
    transitionDuration: {
      /**
       * fast-01 - 70ms - Micro-interactions such as button and toggle
       *
       * fast-02 - 110ms - Micro-interactions such as fade
       *
       * moderate-01 - 150ms - Micro-interactions, small expansion, short distance movements
       *
       * moderate-02 - 240ms - Expansion, system communication, toast
       *
       * slow-01 - 400ms - Large expansion, important system notifications
       *
       * slow-02 - 700ms - Background dimming
       *
       * See: https://carbondesignsystem.com/guidelines/motion/overview/
       */
      DEFAULT: "70ms",
      "fast-01": "70ms",
      "fast-02": "110ms",
      "moderate-01": "150ms",
      "moderate-02": "240ms",
      "slow-01": "400ms",
      "slow-02": "700ms",
    },
    extend: {
      colors: {
        solid: "hsl(var(--solid) / <alpha-value>)",
        "solid-hover": "hsl(var(--solid-hover) / <alpha-value>)",
      },
      backgroundColor: {
        DEFAULT: "hsl(var(--background) / <alpha-value>)",
        subtle: "hsl(var(--background-subtle) / <alpha-value>)",
        element: "hsl(var(--background-element) / <alpha-value>)",
        "element-hover": "hsl(var(--background-element-hover) / <alpha-value>)",
        "element-active":
          "hsl(var(--background-element-active) / <alpha-value>)",
        "element-selected":
          "hsl(var(--background-element-selected) / <alpha-value>)",
      },
      textColor: {
        DEFAULT: "hsl(var(--foreground) / <alpha-value>)",
        subtle: "hsl(var(--foreground-subtle) / <alpha-value>)",
      },
      borderColor: {
        DEFAULT: "hsl(var(--element-border) / <alpha-value>)",
        subtle: "hsl(var(--border-subtle) / <alpha-value>)",
      },
      ringColor: {
        DEFAULT: "hsl(var(--focus-ring) / <alpha-value>)",
      },
      borderRadius: {
        lg: `var(--radius)`,
        md: `calc(var(--radius) - 2px)`,
        sm: "calc(var(--radius) - 4px)",
      },
      fontFamily: {
        sans: ["var(--font-sans)", ...fontFamily.sans],
        mono: ["var(--font-mono)", ...fontFamily.mono],
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [
    require("tailwindcss-radix")(),
    require("tailwindcss-animate")],
} satisfies Config;
